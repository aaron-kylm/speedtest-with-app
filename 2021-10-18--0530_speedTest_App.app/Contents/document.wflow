<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>512</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/zsh

export PATH=/usr/local/bin:$PATH

########
### Aaron Kylmanen
### Last updated:  2021-10-11
### updates
###### Added Static variable for RepoLocation
###### Added check for repolcation 
###### Added a way to get around Licesnse agreement - But this uses user interaction.  Would be nice to be able to do this all without that but I couldn't get a auto yes sent
### Updates:  2021-10-07
###### Added netServiceOrder
###### Added getActiveInterface
#####





##############################
#####  STATIC VARIABLES  #####
##############################

currDate=$(date +%F---%H%M%S)

#####  Site Specific ####
siteId="Home"  
currHostName=$(hostname)
currBSSID=$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep BSSID)
currSSID=$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep SSID | grep -v BSSID)
currPublicIP=$(pub-ip)


#####  Make the file  #####  
filename=wfh_speedtest_${currDate}.txt
repoLocation=~/Documents/speedtest
fileLoc=${repoLocation}/${filename}

endMsgRepoLoc=Documents/speedtest


##############################
#####     Functions     #####
##############################

function popup () {

	# osascript -e 'set alertResult to display alert "arguement passed: '${1}'" buttons {"OK"} as warning'
	osascript -e 'set alertResult to display alert "'${1}' \n\n '${2}' \n\n '${3}'" buttons {"OK"} as warning'

}


fucntion checkRepoFolder(){

	if [[ -d ${repoLocation} ]]
	then
		# popup "The Directory Exist"  
		
		popup "Speed Test is running.  Please wait for the Ping Test Complete popup Window "
		open -a 'Finder' ${repoLocation}
	else
		popup "A terminal window is going to open.  Please follow instructions on next popup windows "
		open -a terminal ~/Downloads/speedtest/./speedtest 
		sleep 2
		open -a terminal ${repoLocation}
		popup "If required in Terminal, please type yes to accept the license and close Terminal and re-run the App"
		
		##  Make Repo Folder
		mkdir ${repoLocation}
		sleep 2
		exit
		# open -a 'Finder' ${repoLocation}

	fi

}


function ping_test () {

	echo "---- Test Ping to ${2} -----" &gt;&gt; ${fileLoc}
	

	ping -c7 $2 &gt;&gt; $1
	
	get_ping_numbers=$(cat ${1} | tail -1)

	echo "" &gt;&gt; $1
	echo "" &gt;&gt; $1
	echo "" &gt;&gt; $1


	###   Send to print_stats
	print_stats "$1" "${2}" "${get_ping_numbers}"

	echo "" &gt;&gt; $1
	echo "" &gt;&gt; $1
	echo "" &gt;&gt; $1


}


function print_stats(){

	# popup "Inside print_stats:  ${1}"
	# popup "Inside print_stats:  ${2}"


	MIN=$(echo  $3 | cut -d'/' -f 4)
	MIN=$(echo $MIN | cut -d'=' -f 2)
	AVG=$(echo $3 | cut -d'/' -f 5)
	MAX=$(echo $3 | cut -d'/' -f 6)
	STDDEV=$(echo $3 | cut -d'/' -f 7)
	STDDEV=$(echo $STDDEV | cut -d' ' -f 1)

	echo "" &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}

	echo " ##### Times to ${2} ##### " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo " minimum Ping Time:  ${MIN}"  &gt;&gt; ${1}
	echo " average Ping Time:  ${AVG}"  &gt;&gt; ${1}
	echo " max Ping Time:  ${MAX}"  &gt;&gt; ${1}
	echo " stddev Ping Time:  ${STDDEV}"  &gt;&gt; ${1}
	echo "" &gt;&gt; ${fileLoc}
	echo " ######################################## " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}


}


function netServiceOrder() {


# networksetup -listnetworkserviceorder &gt;&gt; 


	echo " ######################################## " &gt;&gt; ${1}
	echo " ######  Network Service Order  ###### " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}

	networksetup -listnetworkserviceorder &gt;&gt; ${1}

	echo "" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}


}

funtion getActiveInterface(){


	echo " ######################################## " &gt;&gt; ${1}
	echo " ######      active Interface      ###### " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}

	ActiveNetwork=$(route get default | grep interface | awk '{print $2}')
	ActiveNetworkName=$(networksetup -listallhardwareports | grep -B 1 "$ActiveNetwork" | awk '/Hardware Port/{ print }'|cut -d " " -f3-)
	echo $ActiveNetwork &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo $ActiveNetworkName &gt;&gt;  ${1}

	echo "" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo " ######################################## " &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}


}


function runSpeedTestCLI () {
 

	#############################
	######  Site Specific  ######
	#############################
	### - Get a new list of servers per above:  speedtest-cli --list
	
	echo "---- Test Speed External -&gt; SpeedTest.net-----" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	~/Downloads/speedtest/./speedtest  &gt;&gt; ${1}
	#  speedtest-cli &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	echo "" &gt;&gt; ${1}
	
}


############################################################################################
############################################################################################
############################################################################################
############################################################################################
############################################################################################
############################################################################################



checkRepoFolder


echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo  " To Get a list of more Servers in terminal type: "&gt;&gt; ${fileLoc}
echo  "   speedtest-cli --list  "&gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo  " To test new location Type:  "&gt;&gt; ${fileLoc}
echo  "   speedtest-cli --server &lt; Number &gt; Where number is the first item listed in the Server line"&gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}

echo "Current Hostname:		${currHostName}" &gt;&gt; ${fileLoc}
echo "Date and Time:		${currDate}" &gt;&gt; ${fileLoc}
echo "Current BSSID:		${currBSSID}" &gt;&gt; ${fileLoc}
echo "Current SSID:			${currSSID}" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo  " " &gt;&gt; ${fileLoc}
echo  " " &gt;&gt; ${fileLoc}

echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
netServiceOrder "${fileLoc}"
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}


echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
getActiveInterface "${fileLoc}"
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}

#############################
###  SpeedTest
#############################

echo "" &gt;&gt; ${fileLoc}
echo "Before runSpeedTestCLI " &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
runSpeedTestCLI  "${fileLoc}"


#############################
###  Ping specific site command Variables
	# var 1:  File Results name and Location - Do not update this value
	# var 2:  IP or DNS Name  - This value you can update
#############################

ping_test "${fileLoc}" "8.8.8.8" 
ping_test "${fileLoc}" "yahoo.com" 
ping_test "${fileLoc}" "houzz.com"


echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo " ------- END ------- " &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}
echo "" &gt;&gt; ${fileLoc}



sleep 1


popup "Ping Test Complete" "Open Finder and look In the following Location:  ${endMsgRepoLoc} for the File Named below and attach to support ticket: " "${filename}"</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/bin/zsh</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>C3AA8B53-93C5-44B9-90A1-DCF74A5D748A</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>251040DB-C279-4257-9862-8472F615F21F</string>
				<key>UUID</key>
				<string>A5DA1242-E8C6-42F9-A205-6030C3276D42</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>754.750000:1351.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
